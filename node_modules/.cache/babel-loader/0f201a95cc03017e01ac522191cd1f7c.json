{"ast":null,"code":"'use strict';\n\nexports.enter = {\n  mathFlow: enterMathFlow,\n  mathFlowFenceMeta: enterMathFlowMeta,\n  mathText: enterMathText\n};\nexports.exit = {\n  mathFlow: exitMathFlow,\n  mathFlowFence: exitMathFlowFence,\n  mathFlowFenceMeta: exitMathFlowMeta,\n  mathFlowValue: exitMathData,\n  mathText: exitMathText,\n  mathTextData: exitMathData\n};\n\nfunction enterMathFlow(token) {\n  this.enter({\n    type: 'math',\n    meta: null,\n    value: '',\n    data: {\n      hName: 'div',\n      hProperties: {\n        className: ['math', 'math-display']\n      },\n      hChildren: [{\n        type: 'text',\n        value: ''\n      }]\n    }\n  }, token);\n}\n\nfunction enterMathFlowMeta() {\n  this.buffer();\n}\n\nfunction exitMathFlowMeta() {\n  var data = this.resume();\n  this.stack[this.stack.length - 1].meta = data;\n}\n\nfunction exitMathFlowFence() {\n  // Exit if this is the closing fence.\n  if (this.getData('mathFlowInside')) return;\n  this.buffer();\n  this.setData('mathFlowInside', true);\n}\n\nfunction exitMathFlow(token) {\n  var data = this.resume().replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n  var node = this.exit(token);\n  node.value = data;\n  node.data.hChildren[0].value = data;\n  this.setData('mathFlowInside');\n}\n\nfunction enterMathText(token) {\n  this.enter({\n    type: 'inlineMath',\n    value: '',\n    data: {\n      hName: 'span',\n      hProperties: {\n        className: ['math', 'math-inline']\n      },\n      hChildren: [{\n        type: 'text',\n        value: ''\n      }]\n    }\n  }, token);\n  this.buffer();\n}\n\nfunction exitMathText(token) {\n  var data = this.resume();\n  var node = this.exit(token);\n  node.value = data;\n  node.data.hChildren[0].value = data;\n}\n\nfunction exitMathData(token) {\n  this.config.enter.data.call(this, token);\n  this.config.exit.data.call(this, token);\n}","map":{"version":3,"sources":["/Users/abrahimmahmud/IdeaProjects/HeartDiseaseDiagnosisFrontEnd/node_modules/mdast-util-math/from-markdown.js"],"names":["exports","enter","mathFlow","enterMathFlow","mathFlowFenceMeta","enterMathFlowMeta","mathText","enterMathText","exit","exitMathFlow","mathFlowFence","exitMathFlowFence","exitMathFlowMeta","mathFlowValue","exitMathData","exitMathText","mathTextData","token","type","meta","value","data","hName","hProperties","className","hChildren","buffer","resume","stack","length","getData","setData","replace","node","config","call"],"mappings":"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","sourcesContent":["'use strict'\n\nexports.enter = {\n  mathFlow: enterMathFlow,\n  mathFlowFenceMeta: enterMathFlowMeta,\n  mathText: enterMathText\n}\nexports.exit = {\n  mathFlow: exitMathFlow,\n  mathFlowFence: exitMathFlowFence,\n  mathFlowFenceMeta: exitMathFlowMeta,\n  mathFlowValue: exitMathData,\n  mathText: exitMathText,\n  mathTextData: exitMathData\n}\n\nfunction enterMathFlow(token) {\n  this.enter(\n    {\n      type: 'math',\n      meta: null,\n      value: '',\n      data: {\n        hName: 'div',\n        hProperties: {className: ['math', 'math-display']},\n        hChildren: [{type: 'text', value: ''}]\n      }\n    },\n    token\n  )\n}\n\nfunction enterMathFlowMeta() {\n  this.buffer()\n}\n\nfunction exitMathFlowMeta() {\n  var data = this.resume()\n  this.stack[this.stack.length - 1].meta = data\n}\n\nfunction exitMathFlowFence() {\n  // Exit if this is the closing fence.\n  if (this.getData('mathFlowInside')) return\n  this.buffer()\n  this.setData('mathFlowInside', true)\n}\n\nfunction exitMathFlow(token) {\n  var data = this.resume().replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n  var node = this.exit(token)\n  node.value = data\n  node.data.hChildren[0].value = data\n  this.setData('mathFlowInside')\n}\n\nfunction enterMathText(token) {\n  this.enter(\n    {\n      type: 'inlineMath',\n      value: '',\n      data: {\n        hName: 'span',\n        hProperties: {className: ['math', 'math-inline']},\n        hChildren: [{type: 'text', value: ''}]\n      }\n    },\n    token\n  )\n  this.buffer()\n}\n\nfunction exitMathText(token) {\n  var data = this.resume()\n  var node = this.exit(token)\n  node.value = data\n  node.data.hChildren[0].value = data\n}\n\nfunction exitMathData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n"]},"metadata":{},"sourceType":"script"}