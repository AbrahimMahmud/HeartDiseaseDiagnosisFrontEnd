{"ast":null,"code":"var _jsxFileName = \"/Users/abrahimmahmud/IdeaProjects/HeartDiseaseDiagnosisFrontEnd/src/pages/PatientDatabase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/dashboard.min.css\";\nimport \"../styles/daterangepicker.css\";\nimport \"../styles/ion.rangeSlider.min.css\";\nimport \"../styles/jquery.scrollbar.css\";\nimport \"../styles/select2.css\";\nimport \"../styles/swiper.css\";\nimport Avatar from \"../images/IMG_0793.jpg\";\nimport Results from \"../images/icons/icons-64-white/flask.png\";\nimport Stethoscope from \"../images/icons/icons-64-white/stethoscope.png\";\nimport Doctor from \"../images/icons/icons-64-white/doctor.png\";\nimport { Link } from \"react-router-dom\";\nimport { auth, db } from \"../firebase-config\";\nimport { query, getDocs, collection, where, addDoc, setDoc, doc, updateDoc, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PatientDataset() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [results, setResults] = useState([]);\n  const [names, setNames] = useState([]);\n  useEffect(() => {\n    const getResultsFromFirebase = [];\n    const getNamesFromFirebase = [];\n    const q = query(collection(db, \"previous-patient-diagnoses\"));\n    const patientData = onSnapshot(q, querySnapshot => {\n      querySnapshot.forEach(doc => {\n        getResultsFromFirebase.push({ ...doc.data(),\n          key: doc.id\n        });\n        getNamesFromFirebase.push({ ...doc.id\n        });\n      });\n      setResults(getResultsFromFirebase);\n      setNames(getNamesFromFirebase);\n      setLoading(false);\n    });\n    return () => patientData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading firebase data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results.length > 0 ? results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        style: {\n          height: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"dashboard-wrap\",\n          style: {\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"section section--content\",\n            id: \"content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"grid grid--margin\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"grid__row dashboard-intro\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"grid__col grid__col--margin grid__col--padding bg-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"grid__row\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: result.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: result.result\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 29\n                      }, this)]\n                    }, results.key, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"no results available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PatientDataset, \"Lj5TnQV1zz49p3BdeWG+6+NaGIA=\");\n\n_c = PatientDataset;\nexport default PatientDataset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientDataset\");","map":{"version":3,"sources":["/Users/abrahimmahmud/IdeaProjects/HeartDiseaseDiagnosisFrontEnd/src/pages/PatientDatabase.js"],"names":["React","useEffect","useState","Avatar","Results","Stethoscope","Doctor","Link","auth","db","query","getDocs","collection","where","addDoc","setDoc","doc","updateDoc","getDoc","onSnapshot","useAuthState","PatientDataset","loading","setLoading","results","setResults","names","setNames","getResultsFromFirebase","getNamesFromFirebase","q","patientData","querySnapshot","forEach","push","data","key","id","length","map","result","height","textAlign","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../styles/dashboard.min.css\";\nimport \"../styles/daterangepicker.css\";\nimport \"../styles/ion.rangeSlider.min.css\";\nimport \"../styles/jquery.scrollbar.css\";\nimport \"../styles/select2.css\";\nimport \"../styles/swiper.css\";\nimport Avatar from \"../images/IMG_0793.jpg\";\nimport Results from \"../images/icons/icons-64-white/flask.png\";\nimport Stethoscope from \"../images/icons/icons-64-white/stethoscope.png\";\nimport Doctor from \"../images/icons/icons-64-white/doctor.png\";\nimport { Link } from \"react-router-dom\";\nimport { auth, db } from \"../firebase-config\";\nimport {\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n  setDoc,\n  doc,\n  updateDoc,\n  getDoc,\n  onSnapshot,\n} from \"firebase/firestore\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction PatientDataset() {\n  const [loading, setLoading] = useState(true);\n  const [results, setResults] = useState([]);\n  const [names, setNames] = useState([]);\n  useEffect(() => {\n    const getResultsFromFirebase = [];\n    const getNamesFromFirebase = [];\n    const q = query(collection(db, \"previous-patient-diagnoses\"));\n    const patientData = onSnapshot(q, (querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        getResultsFromFirebase.push({ ...doc.data(), key: doc.id });\n        getNamesFromFirebase.push({ ...doc.id });\n      });\n      setResults(getResultsFromFirebase);\n      setNames(getNamesFromFirebase);\n      setLoading(false);\n    });\n    return () => patientData();\n  }, []);\n\n  if (loading) {\n    return <h1>loading firebase data...</h1>;\n  }\n\n  return (\n    <div>\n      {results.length > 0 ? (\n        results.map((result) => (\n          <div\n            style={{\n              height: \"100%\",\n            }}\n          >\n            <body\n              style={{\n                height: \"100%\",\n              }}\n            >\n              <div\n                class=\"dashboard-wrap\"\n                style={{\n                  height: \"100%\",\n                }}\n              >\n                <div class=\"section section--content\" id=\"content\">\n                  <div class=\"grid grid--margin\">\n                    <div\n                      class=\"grid__row dashboard-intro\"\n                      style={{\n                        textAlign: \"left\",\n                      }}\n                    >\n                      <div class=\"grid__col grid__col--margin grid__col--padding bg-white\">\n                        <div class=\"grid__row\">\n                          <div key={results.key}>\n                            <div>{result.name}</div>\n                            <div>{result.result}</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </body>\n          </div>\n        ))\n      ) : (\n        <h1>no results available</h1>\n      )}\n    </div>\n  );\n}\n\nexport default PatientDataset;\n"]},"metadata":{},"sourceType":"module"}