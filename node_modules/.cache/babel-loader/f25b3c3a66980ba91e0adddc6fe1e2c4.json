{"ast":null,"code":"'use strict';\n\nvar syntax = require('micromark-extension-math');\n\nvar fromMarkdown = require('mdast-util-math/from-markdown');\n\nvar toMarkdown = require('mdast-util-math/to-markdown');\n\nvar warningIssued;\nmodule.exports = math;\n\nfunction math() {\n  var data = this.data();\n  /* istanbul ignore next - old remark. */\n\n  if (!warningIssued && (this.Parser && this.Parser.prototype && this.Parser.prototype.blockTokenizers || this.Compiler && this.Compiler.prototype && this.Compiler.prototype.visitors)) {\n    warningIssued = true;\n    console.warn('[remark-math] Warning: please upgrade to remark 13 to use this plugin');\n  }\n\n  add('micromarkExtensions', syntax);\n  add('fromMarkdownExtensions', fromMarkdown);\n  add('toMarkdownExtensions', toMarkdown);\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value);else data[field] = [value];\n  }\n}","map":{"version":3,"sources":["/Users/abrahimmahmud/IdeaProjects/HeartDiseaseDiagnosisFrontEnd/node_modules/remark-math/index.js"],"names":["syntax","require","fromMarkdown","toMarkdown","warningIssued","module","exports","math","data","Parser","prototype","blockTokenizers","Compiler","visitors","console","warn","add","field","value","push"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAApB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,+BAAD,CAA1B;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,6BAAD,CAAxB;;AACA,IAAIG,aAAJ;AAEAC,MAAM,CAACC,OAAP,GAAiBC,IAAjB;;AAEA,SAASA,IAAT,GAAgB;AACd,MAAIC,IAAI,GAAG,KAAKA,IAAL,EAAX;AAEA;;AACA,MACE,CAACJ,aAAD,KACE,KAAKK,MAAL,IACA,KAAKA,MAAL,CAAYC,SADZ,IAEA,KAAKD,MAAL,CAAYC,SAAZ,CAAsBC,eAFvB,IAGE,KAAKC,QAAL,IACC,KAAKA,QAAL,CAAcF,SADf,IAEC,KAAKE,QAAL,CAAcF,SAAd,CAAwBG,QAN5B,CADF,EAQE;AACAT,IAAAA,aAAa,GAAG,IAAhB;AACAU,IAAAA,OAAO,CAACC,IAAR,CACE,uEADF;AAGD;;AAEDC,EAAAA,GAAG,CAAC,qBAAD,EAAwBhB,MAAxB,CAAH;AACAgB,EAAAA,GAAG,CAAC,wBAAD,EAA2Bd,YAA3B,CAAH;AACAc,EAAAA,GAAG,CAAC,sBAAD,EAAyBb,UAAzB,CAAH;;AAEA,WAASa,GAAT,CAAaC,KAAb,EAAoBC,KAApB,EAA2B;AACzB;AACA,QAAIV,IAAI,CAACS,KAAD,CAAR,EAAiBT,IAAI,CAACS,KAAD,CAAJ,CAAYE,IAAZ,CAAiBD,KAAjB,EAAjB,KACKV,IAAI,CAACS,KAAD,CAAJ,GAAc,CAACC,KAAD,CAAd;AACN;AACF","sourcesContent":["'use strict'\n\nvar syntax = require('micromark-extension-math')\nvar fromMarkdown = require('mdast-util-math/from-markdown')\nvar toMarkdown = require('mdast-util-math/to-markdown')\nvar warningIssued\n\nmodule.exports = math\n\nfunction math() {\n  var data = this.data()\n\n  /* istanbul ignore next - old remark. */\n  if (\n    !warningIssued &&\n    ((this.Parser &&\n      this.Parser.prototype &&\n      this.Parser.prototype.blockTokenizers) ||\n      (this.Compiler &&\n        this.Compiler.prototype &&\n        this.Compiler.prototype.visitors))\n  ) {\n    warningIssued = true\n    console.warn(\n      '[remark-math] Warning: please upgrade to remark 13 to use this plugin'\n    )\n  }\n\n  add('micromarkExtensions', syntax)\n  add('fromMarkdownExtensions', fromMarkdown)\n  add('toMarkdownExtensions', toMarkdown)\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n"]},"metadata":{},"sourceType":"script"}