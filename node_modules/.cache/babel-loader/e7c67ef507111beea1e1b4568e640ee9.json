{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nimport { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { query, getDocs, collection, where, addDoc, setDoc, doc, updateDoc } from \"firebase/firestore\"; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCWHGDYvn_n-wwC9ZOskp1USNRquFWdw4U\",\n  authDomain: \"heartdiseasediagnosisml.firebaseapp.com\",\n  projectId: \"heartdiseasediagnosisml\",\n  storageBucket: \"heartdiseasediagnosisml.appspot.com\",\n  messagingSenderId: \"48045985241\",\n  appId: \"1:48045985241:web:e3ad3f6c58d209ba47ddc8\"\n};\nexport const logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const registerWithEmailAndPassword = async (name, email, password, phone, address, language, gender) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await setDoc(doc(db, \"users\", user.uid), {\n      uid: user.uid,\n      name,\n      email,\n      phone,\n      address,\n      language,\n      gender\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const logout = () => {\n  signOut(auth);\n};\nexport const getData = async () => {\n  const userId = (await auth.currentUser()).uid;\n  const docRef = doc(db, \"cities\", \"SF\");\n  const docSnap = await getDoc(docRef);\n}; // Initialize Firebase\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\nexport const provider = new GoogleAuthProvider();","map":{"version":3,"sources":["/Users/abrahimmahmud/IdeaProjects/HeartDiseaseDiagnosisFrontEnd/src/firebase-config.js"],"names":["initializeApp","getFirestore","getAuth","GoogleAuthProvider","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","query","getDocs","collection","where","addDoc","setDoc","doc","updateDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","logInWithEmailAndPassword","email","password","auth","err","console","error","alert","message","registerWithEmailAndPassword","name","phone","address","language","gender","res","user","db","uid","logout","getData","userId","currentUser","docRef","docSnap","getDoc","app","provider"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,eAA5C,C,CACA;AACA;;AACA,SACEC,eADF,EAEEC,0BAFF,EAGEC,8BAHF,EAIEC,sBAJF,EAKEC,OALF,QAMO,eANP;AAOA,SACEC,KADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,GAPF,EAQEC,SARF,QASO,oBATP,C,CAWA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,yCAFS;AAGrBC,EAAAA,SAAS,EAAE,yBAHU;AAIrBC,EAAAA,aAAa,EAAE,qCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,aALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AASA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAClE,MAAI;AACF,UAAMrB,0BAA0B,CAACsB,IAAD,EAAOF,KAAP,EAAcC,QAAd,CAAhC;AACD,GAFD,CAEE,OAAOE,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,IAAAA,KAAK,CAACH,GAAG,CAACI,OAAL,CAAL;AACD;AACF,CAPM;AAQP,OAAO,MAAMC,4BAA4B,GAAG,OAAOC,IAAP,EAAaT,KAAb,EAAoBC,QAApB,EAA8BS,KAA9B,EAAqCC,OAArC,EAA8CC,QAA9C,EAAwDC,MAAxD,KAAmE;AAC7G,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMjC,8BAA8B,CAACqB,IAAD,EAAOF,KAAP,EAAcC,QAAd,CAAhD;AACA,UAAMc,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACA,UAAM1B,MAAM,CAACC,GAAG,CAAC0B,EAAD,EAAK,OAAL,EAAcD,IAAI,CAACE,GAAnB,CAAJ,EAA6B;AACvCA,MAAAA,GAAG,EAAEF,IAAI,CAACE,GAD6B;AAEvCR,MAAAA,IAFuC;AAGvCT,MAAAA,KAHuC;AAIvCU,MAAAA,KAJuC;AAKvCC,MAAAA,OALuC;AAMvCC,MAAAA,QANuC;AAOvCC,MAAAA;AAPuC,KAA7B,CAAZ;AASD,GAZD,CAYE,OAAOV,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,IAAAA,KAAK,CAACH,GAAG,CAACI,OAAL,CAAL;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMW,MAAM,GAAG,MAAM;AAC1BnC,EAAAA,OAAO,CAACmB,IAAD,CAAP;AACD,CAFM;AAIP,OAAO,MAAMiB,OAAO,GAAG,YAAY;AACjC,QAAMC,MAAM,GAAG,CAAC,MAAMlB,IAAI,CAACmB,WAAL,EAAP,EAA2BJ,GAA1C;AACA,QAAMK,MAAM,GAAGhC,GAAG,CAAC0B,EAAD,EAAK,QAAL,EAAe,IAAf,CAAlB;AACA,QAAMO,OAAO,GAAG,MAAMC,MAAM,CAACF,MAAD,CAA5B;AACD,CAJM,C,CAKP;;AACA,OAAO,MAAMG,GAAG,GAAGlD,aAAa,CAACiB,cAAD,CAAzB;AAEP,OAAO,MAAMwB,EAAE,GAAGxC,YAAY,CAACiD,GAAD,CAAvB;AACP,OAAO,MAAMvB,IAAI,GAAGzB,OAAO,CAACgD,GAAD,CAApB;AACP,OAAO,MAAMC,QAAQ,GAAG,IAAIhD,kBAAJ,EAAjB","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nimport {\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n  setDoc,\n  doc,\n  updateDoc\n} from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCWHGDYvn_n-wwC9ZOskp1USNRquFWdw4U\",\n  authDomain: \"heartdiseasediagnosisml.firebaseapp.com\",\n  projectId: \"heartdiseasediagnosisml\",\n  storageBucket: \"heartdiseasediagnosisml.appspot.com\",\n  messagingSenderId: \"48045985241\",\n  appId: \"1:48045985241:web:e3ad3f6c58d209ba47ddc8\",\n};\n\nexport const logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const registerWithEmailAndPassword = async (name, email, password, phone, address, language, gender) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await setDoc(doc(db, \"users\", user.uid), {\n      uid: user.uid,\n      name,\n      email,\n      phone,\n      address,\n      language,\n      gender\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n}; \n\nexport const logout = () => {\n  signOut(auth);\n};\n\nexport const getData = async () => {\n  const userId = (await auth.currentUser()).uid;\n  const docRef = doc(db, \"cities\", \"SF\");\n  const docSnap = await getDoc(docRef);\n}\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\nexport const provider = new GoogleAuthProvider();\n"]},"metadata":{},"sourceType":"module"}